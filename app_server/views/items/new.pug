extends ../layout

block content
  .container.my-4
    // Breadcrumb
    nav(aria-label="breadcrumb")
      ol.breadcrumb
        li.breadcrumb-item
          a(href="/") Inicio
        li.breadcrumb-item.active(aria-current="page") Publicar Item

    .row.justify-content-center
      .col-lg-8
        .card.border-0.shadow
          .card-body.p-4
            // Header
            .text-center.mb-4
              .bg-primary.rounded-circle.d-inline-flex.align-items-center.justify-content-center.mb-3(style="width: 60px; height: 60px;")
                i.bi.bi-plus-circle.text-white.fs-3
              h2.fw-bold Publicar Nuevo Item
              p.text-muted Comparte tus productos con la comunidad USFQ

            // Success Alert
            if success
              .alert.alert-success.d-flex.align-items-center(role="alert")
                i.bi.bi-check-circle-fill.me-2
                div= success

            // Error Alert
            if error
              .alert.alert-danger.d-flex.align-items-center(role="alert")
                i.bi.bi-exclamation-triangle-fill.me-2
                div= error

            // Publish Form
            form#itemForm(method="POST", action="/api/items", novalidate)
              .row
                // Title
                .col-12.mb-3
                  label.form-label(for="title") 
                    i.bi.bi-tag.me-1
                    | Título del producto *
                  input.form-control(
                    type="text", 
                    id="title", 
                    name="title", 
                    placeholder="Ej: MacBook Pro 2021, Libro de Cálculo...",
                    value=formData.title || '',
                    maxlength="100",
                    required
                  )
                  .form-text Máximo 100 caracteres

                // Category and Condition
                .col-md-6.mb-3
                  label.form-label(for="category")
                    i.bi.bi-grid.me-1
                    | Categoría *
                  select.form-select(id="category", name="category", required)
                    option(value="", selected=!formData.category) Seleccionar categoría
                    option(value="Libros", selected=formData.category==='Libros') Libros
                    option(value="Tecnología", selected=formData.category==='Tecnología') Tecnología
                    option(value="Arte", selected=formData.category==='Arte') Arte y Diseño
                    option(value="Hogar", selected=formData.category==='Hogar') Hogar y Dormitorio
                    option(value="Otros", selected=formData.category==='Otros') Otros

                .col-md-6.mb-3
                  label.form-label(for="condition")
                    i.bi.bi-star.me-1
                    | Condición *
                  select.form-select(id="condition", name="condition", required)
                    option(value="", selected=!formData.condition) Seleccionar condición
                    option(value="Nuevo", selected=formData.condition==='Nuevo') Nuevo
                    option(value="Como nuevo", selected=formData.condition==='Como nuevo') Como nuevo
                    option(value="Usado", selected=formData.condition==='Usado') Usado

                // Price
                .col-md-6.mb-3
                  label.form-label(for="price")
                    i.bi.bi-currency-dollar.me-1
                    | Precio (USD) *
                  .input-group
                    span.input-group-text $
                    input.form-control(
                      type="number", 
                      id="price", 
                      name="price", 
                      placeholder="0.00",
                      value=formData.price || '',
                      min="0",
                      step="0.01",
                      required
                    )

                // WhatsApp
                .col-md-6.mb-3
                  label.form-label(for="whatsapp")
                    i.bi.bi-whatsapp.me-1
                    | WhatsApp *
                  .input-group
                    span.input-group-text +593
                    input.form-control(
                      type="tel", 
                      id="whatsapp", 
                      name="whatsapp", 
                      placeholder="987654321",
                      value=formData.whatsapp || '',
                      pattern="[0-9]{9}",
                      maxlength="9",
                      required
                    )
                  .form-text Solo números, sin el código del país

                // Description
                .col-12.mb-3
                  label.form-label(for="description")
                    i.bi.bi-card-text.me-1
                    | Descripción *
                  textarea.form-control(
                    id="description", 
                    name="description", 
                    rows="4",
                    placeholder="Describe tu producto: estado, características, razón de venta...",
                    maxlength="500",
                    required
                  )= formData.description || ''
                  .form-text Máximo 500 caracteres

                // Images
                .col-12.mb-4
                  label.form-label
                    i.bi.bi-images.me-1
                    | Imágenes *
                  .card.bg-light
                    .card-body
                      p.mb-3.text-muted Por ahora ingresa URLs de imágenes (puedes usar servicios como Imgur, Google Drive, etc.)

                      #imageInputs
                        .input-group.mb-2
                          span.input-group-text
                            i.bi.bi-image
                          input.form-control(
                            type="url", 
                            name="images", 
                            placeholder="https://ejemplo.com/imagen1.jpg",
                            value=Array.isArray(formData.images) ? formData.images[0] : formData.images || ''
                          )
                          button.btn.btn-outline-success(type="button", onclick="addImageInput()")
                            i.bi.bi-plus

                      .form-text Agrega al menos una imagen. Máximo 4 imágenes.

              // Submit Button
              .d-grid.gap-2.mt-4
                // Client-side error placeholder
                #clientError.alert.alert-danger.d-none(role="alert")
                button.btn.btn-primary.btn-lg(type="submit")
                  i.bi.bi-upload.me-2
                  | Publicar Item

              // Back Button
              .text-center.mt-3
                a.btn.btn-outline-secondary(href="/")
                  i.bi.bi-arrow-left.me-2
                  | Volver al Inicio

  // JavaScript for dynamic image inputs
  script.
    let imageInputCount = 1;
    const maxImages = 4;

    function addImageInput() {
      if (imageInputCount < maxImages) {
        imageInputCount++;
        const container = document.getElementById('imageInputs');
        const newInputGroup = document.createElement('div');
        newInputGroup.className = 'input-group mb-2';
        newInputGroup.innerHTML = `
          <span class="input-group-text">
            <i class="bi bi-image"></i>
          </span>
          <input type="url" class="form-control" name="images" placeholder="https://ejemplo.com/imagen${imageInputCount}.jpg">
          <button type="button" class="btn btn-outline-danger" onclick="removeImageInput(this)">
            <i class="bi bi-dash"></i>
          </button>
        `;
        container.appendChild(newInputGroup);

        // Hide add button if max reached
        if (imageInputCount >= maxImages) {
          event.target.style.display = 'none';
        }
      }
    }

    function removeImageInput(button) {
      button.parentElement.remove();
      imageInputCount--;
      
      // Show add button again
      const addButton = document.querySelector('button[onclick="addImageInput()"]');
      if (addButton) {
        addButton.style.display = 'block';
      }
    }

    // Form validation
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.querySelector('form');
      const priceInput = document.getElementById('price');
      const whatsappInput = document.getElementById('whatsapp');

      // Price validation
      priceInput.addEventListener('input', function() {
        if (this.value < 0) {
          this.setCustomValidity('El precio debe ser mayor a 0');
        } else {
          this.setCustomValidity('');
        }
      });

      // WhatsApp validation
      whatsappInput.addEventListener('input', function() {
        const value = this.value.replace(/\D/g, '');
        this.value = value;
        
        if (value.length !== 9) {
          this.setCustomValidity('Debe tener exactamente 9 dígitos');
        } else {
          this.setCustomValidity('');
        }
      });
    });

      // Intercept form submit to POST to API via fetch and redirect on success
      const formEl = document.getElementById('itemForm');
      const clientError = document.getElementById('clientError');
      if (formEl) {
        formEl.addEventListener('submit', async (e) => {
          e.preventDefault();
          clientError && clientError.classList.add('d-none');

          // Collect form data
          const form = e.target;
          const title = form.querySelector('#title')?.value?.trim();
          const description = form.querySelector('#description')?.value?.trim();
          const price = parseFloat(form.querySelector('#price')?.value || '0');
          const category = form.querySelector('#category')?.value;
          const condition = form.querySelector('#condition')?.value;
          const whatsapp = form.querySelector('#whatsapp')?.value;
          const imageInputs = form.querySelectorAll('input[name="images"]');
          const images = Array.from(imageInputs)
            .map(i => i.value.trim())
            .filter(Boolean);

          // Basic client validation
          const errs = [];
          if (!title || title.length < 3) errs.push('El título debe tener al menos 3 caracteres');
          if (!description || description.length < 10) errs.push('La descripción debe tener al menos 10 caracteres');
          if (!price || isNaN(price) || price <= 0) errs.push('El precio debe ser un número mayor a 0');
          if (!category) errs.push('Selecciona una categoría');
          if (!condition) errs.push('Selecciona la condición del producto');
          if (images.length === 0) errs.push('Agrega al menos una imagen (URL)');
          if (!whatsapp || !/^\d{9}$/.test(whatsapp)) errs.push('Ingresa un WhatsApp válido (9 dígitos)');

          if (errs.length) {
            if (clientError) {
              clientError.textContent = errs.join('. ');
              clientError.classList.remove('d-none');
            }
            return;
          }

          try {
            const res = await fetch('/api/items', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ title, description, price, category, condition, images, whatsapp })
            });

            if (res.ok) {
              window.location.href = '/items/success';
            } else {
              const data = await res.json().catch(() => ({}));
              const msg = data?.message || 'Error al crear el item.';
              if (clientError) {
                clientError.textContent = msg;
                clientError.classList.remove('d-none');
              }
            }
          } catch (err) {
            if (clientError) {
              clientError.textContent = 'Error de red o del servidor. Intenta de nuevo.';
              clientError.classList.remove('d-none');
            }
          }
        });
      }